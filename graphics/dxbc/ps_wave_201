//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer g_MaterialParameter
// {
//
//   float4 g_MaterialParameter[11];    // Offset:    0 Size:   176
//
// }
//
// cbuffer g_WetnessParameter
// {
//
//   float4 g_WetnessParameter[2];      // Offset:    0 Size:    32
//
// }
0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x3f
0x00 0x00 0x00 0x00 0x00 0x00 0x87 0xc2
0xcd 0xcc 0x6c 0x40 0x00 0x00 0x40 0x41
0xcd 0xcc 0xcc 0x3e 0x00 0x00 0x00 0x00

//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// g_SamplerColorMap0.S              sampler      NA          NA             s0      1
// g_SamplerSpecularMap0.S           sampler      NA          NA             s1      1
// g_SamplerColorMap0.T              texture  float4          2d             t0      1
// g_SamplerSpecularMap0.T           texture  float4          2d             t1      1
// g_MaterialParameter               cbuffer      NA          NA            cb0      1
// g_WetnessParameter                cbuffer      NA          NA            cb1      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyz
// TEXCOORD                 1   xyzw        2     NONE   float
// TEXCOORD                 2   xyzw        3     NONE   float
// TEXCOORD                 3   xyzw        4     NONE   float   xy
// TEXCOORD                 4   xyzw        5     NONE   float     zw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float
// COLOR                    0   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
0x00000000: ps_5_0
0x00000008: dcl_globalFlags refactoringAllowed
0x0000000C: dcl_constantbuffer CB0[11], immediateIndexed
0x0000001C: dcl_constantbuffer CB1[2], immediateIndexed
0x0000002C: dcl_sampler s0, mode_default
0x00000038: dcl_sampler s1, mode_default
0x00000044: dcl_resource_texture2d (float,float,float,float) t0
0x00000054: dcl_resource_texture2d (float,float,float,float) t1
0x00000064: dcl_input_ps linear v1.xyz
0x00000070: dcl_input_ps linear v4.xy
0x0000007C: dcl_input_ps linear v5.zw
0x00000088: dcl_input_ps linear v6.xyzw
0x00000094: dcl_output o0.xyzw
0x000000A0: dcl_output o1.xyzw
0x000000AC: dcl_output o2.xyzw
0x000000B8: dcl_output o3.xyzw
0x000000C4: dcl_temps 5
0x000000CC: mul r0.xy, v4.xyxx, cb0[2].xyxx
0x000000EC: mul r0.zw, r0.xxxy, cb0[0].xxxy
0x0000010C: mul r0.xy, r0.xyxx, cb0[1].xyxx
0x0000012C: sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t1.xyzw, s1
0x00000158: sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.zwzz, t0.xyzw, s0
0x00000184: add r2.x, r0.w, -cb0[4].w
0x000001A8: lt r2.x, r2.x, l(0.000000)
0x000001C4: discard_nz r2.x
0x000001D0: mul_sat r2.x, r1.x, cb1[1].x
0x000001F0: mov r3.xz, r1.xxzx
0x00000204: add r2.x, r2.x, -r3.x
0x00000224: mul r1.x, r1.y, l(128.000000)
0x00000240: max r3.y, r1.x, l(1.000000)
0x0000025C: add r2.yz, -r3.yyzy, cb1[1].yyzy
0x00000280: dp3 r1.x, v1.xyzx, v1.xyzx
0x0000029C: rsq r1.x, r1.x
0x000002B0: mad_sat r1.y, v1.y, r1.x, l(0.500000)
0x000002D4: mul r4.xyz, r1.xxxx, v1.xyzx
0x000002F0: mad o0.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
0x0000032C: mov_sat r1.x, v5.w
0x00000340: mul r1.y, r1.y, r1.x
0x0000035C: mul r1.y, r1.y, cb1[0].x
0x0000037C: mov r3.w, l(1.000000)
0x00000390: add r2.w, -r3.w, cb1[0].y
0x000003B4: mad r2.xyzw, r1.yyyy, r2.xyzw, r3.xyzw
0x000003D8: mul r1.y, r2.y, l(-0.066667)
0x000003F4: exp o0.w, r1.y
0x00000408: max r0.w, r0.w, l(0.001000)
0x00000424: div r0.xyz, r0.xyzx, r0.wwww
0x00000440: mul r3.xyz, r0.xyzx, r0.xyzx
0x0000045C: mul r0.xyz, r0.xyzx, cb0[4].xyzx
0x0000047C: mul r0.xyz, r0.xyzx, r0.xyzx
0x00000498: mul r0.xyz, r2.wwww, r0.xyzx
0x000004B4: sqrt o2.xyz, r0.xyzx
0x000004C8: mul r0.xyz, r3.xyzx, v6.xyzx
0x000004E4: mul r0.xyz, r0.xyzx, v6.wwww
0x00000500: mul r0.xyz, r1.wwww, r0.xyzx
0x0000051C: dp3 r1.y, r0.xyzx, r0.xyzx
0x00000538: lt r1.y, l(0.000000), r1.y
0x00000554: and r1.y, r1.y, l(0x3f800000)
0x00000570: dp3 r1.z, cb0[6].xyzx, l(0.298910, 0.586610, 0.114480, 0.000000)
0x0000059C: add r1.z, r1.z, l(-1.000000)
0x000005B8: mad r1.z, r1.y, r1.z, l(1.000000)
0x000005DC: mul o1.z, r1.z, r2.x
0x000005F8: mov o2.w, r2.z
0x0000060C: lt r1.z, cb1[0].w, v5.z
0x0000062C: div_sat r1.w, v5.z, cb1[0].w
0x0000064C: movc r1.z, r1.z, r1.w, l(1.000000)
0x00000670: mul r1.z, r1.z, r1.z
0x0000068C: add r1.w, r1.x, l(-1.000000)
0x000006A8: mov o1.y, r1.x
0x000006BC: mad o1.x, r1.z, r1.w, l(1.000000)
0x000006E0: mov o1.w, cb0[9].w
0x000006F8: max r0.w, cb0[10].y, l(0.007812)
0x00000718: mov r2.xyz, cb0[6].xyzx
0x00000730: mov r2.w, l(0)
0x00000744: add r0.xyzw, r0.xyzw, -r2.xyzw
0x00000764: mad r0.xyzw, r1.yyyy, r0.xyzw, r2.xyzw
0x00000788: sqrt o3.xyz, r0.xyzx
0x0000079C: mov o3.w, r0.w
0x000007B0: ret
// Approximately 61 instruction slots used
