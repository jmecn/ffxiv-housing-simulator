//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer g_MaterialParameter
// {
//
//   float4 g_MaterialParameter[11];    // Offset:    0 Size:   176
//
// }
//
// cbuffer g_CameraParameter
// {
//
//   struct CameraParameter
//   {
//
//       row_major float3x4 m_ViewMatrix;// Offset:    0
//       row_major float3x4 m_InverseViewMatrix;// Offset:   48
//       row_major float4x4 m_ViewProjectionMatrix;// Offset:   96
//       row_major float4x4 m_InverseViewProjectionMatrix;// Offset:  160
//       row_major float4x4 m_InverseProjectionMatrix;// Offset:  224
//       row_major float4x4 m_ProjectionMatrix;// Offset:  288
//       row_major float4x4 m_MainViewToProjectionMatrix;// Offset:  352
//       float3 m_EyePosition;          // Offset:  416
//       float3 m_LookAtVector;         // Offset:  432
//
//   } g_CameraParameter;               // Offset:    0 Size:   444
//
// }
//
// cbuffer g_InstanceData
// {
//
//   struct BGInstanceData
//   {
//
//       row_major float3x4 m_TransformMatrix;// Offset:    0
//       float4 m_InstanceParam0;       // Offset:   48
//       float4 m_InstanceParam1;       // Offset:   64
//       float4 m_InstanceParam2;       // Offset:   80
//
//   } g_InstanceData;                  // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// g_MaterialParameter               cbuffer      NA          NA            cb0      1
// g_CameraParameter                 cbuffer      NA          NA            cb1      1
// g_InstanceData                    cbuffer      NA          NA            cb2      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz
// BINORMAL                 0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float
// TEXCOORD                 4   x           4     NONE     int
// TEXCOORD                 5   xyzw        5     NONE   float
// TEXCOORD                 0   xyzw        6     NONE   float   xyzw
// COLOR                    0   xyzw        7     NONE   float
// COLOR                    1   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// COLOR                    0   xyzw        8     NONE   float   xyzw
//
0x00000000: vs_5_0
0x00000008: dcl_globalFlags refactoringAllowed
0x0000000C: dcl_constantbuffer CB0[9], immediateIndexed
0x0000001C: dcl_constantbuffer CB1[26], immediateIndexed
0x0000002C: dcl_constantbuffer CB2[6], immediateIndexed
0x0000003C: dcl_input v0.xyzw
0x00000048: dcl_input v1.xyz
0x00000054: dcl_input v2.xyzw
0x00000060: dcl_input v6.xyzw
0x0000006C: dcl_output_siv o0.xyzw, position
0x0000007C: dcl_output o1.xyzw
0x00000088: dcl_output o2.xyzw
0x00000094: dcl_output o3.xyzw
0x000000A0: dcl_output o4.xyzw
0x000000AC: dcl_output o5.xyzw
0x000000B8: dcl_output o6.xyzw
0x000000C4: dcl_output o7.xyzw
0x000000D0: dcl_output o8.xyzw
0x000000DC: dcl_temps 2
0x000000E4: mov r0.w, l(1.000000)
0x000000F8: mov r1.xyz, v0.xyzx
0x0000010C: mov r1.w, l(1.000000)
0x00000120: dp4 r0.x, cb2[0].xyzw, r1.xyzw
0x00000140: dp4 r0.y, cb2[1].xyzw, r1.xyzw
0x00000160: dp4 r0.z, cb2[2].xyzw, r1.xyzw
0x00000180: dp4 o0.x, cb1[22].xyzw, r0.xyzw
0x000001A0: dp4 o0.y, cb1[23].xyzw, r0.xyzw
0x000001C0: dp4 o0.z, cb1[24].xyzw, r0.xyzw
0x000001E0: dp4 o0.w, cb1[25].xyzw, r0.xyzw
0x00000200: mov o5.xyz, r0.xyzx
0x00000214: dp3 o1.x, cb2[0].xyzx, v1.xyzx
0x00000234: dp3 o1.y, cb2[1].xyzx, v1.xyzx
0x00000254: dp3 o1.z, cb2[2].xyzx, v1.xyzx
0x00000274: mov o1.w, cb2[3].w
0x0000028C: mad o2.w, v2.w, l(2.000000), l(-1.000000)
0x000002B0: mad r0.xyz, v2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
0x000002EC: dp3 o2.x, cb2[0].xyzx, r0.xyzx
0x0000030C: dp3 o2.y, cb2[1].xyzx, r0.xyzx
0x0000032C: dp3 o2.z, cb2[2].xyzx, r0.xyzx
0x0000034C: mov o3.xyzw, l(0,0,0,0)
0x0000036C: mov o4.xyzw, v6.xyzw
0x00000380: mul o5.w, v0.w, cb2[3].x
0x000003A0: dp3 r0.x, cb0[8].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
0x000003CC: lt r0.x, l(0.000000), r0.x
0x000003E8: add r0.yzw, -cb0[8].xxyz, cb2[5].xxyz
0x00000410: mad r0.yzw, cb2[5].wwww, r0.yyzw, cb0[8].xxyz
0x0000043C: and o6.xyz, r0.yzwy, r0.xxxx
0x00000458: mov o6.w, cb2[4].w
0x00000470: mov o7.xyzw, l(0,0,0,0)
0x00000490: mov o8.xyzw, l(0,0,0,0)
0x000004B0: ret
// Approximately 32 instruction slots used
