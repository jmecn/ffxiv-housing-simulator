//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer g_MaterialParameter
// {
//
//   float4 g_MaterialParameter[11];    // Offset:    0 Size:   176
//
// }
//
// cbuffer g_WetnessParameter
// {
//
//   float4 g_WetnessParameter[2];      // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// g_SamplerColorMap0.S              sampler      NA          NA             s0      1
// g_SamplerNormalMap0.S             sampler      NA          NA             s1      1
// g_SamplerSpecularMap0.S           sampler      NA          NA             s2      1
// g_SamplerColorMap0.T              texture  float4          2d             t0      1
// g_SamplerNormalMap0.T             texture  float4          2d             t1      1
// g_SamplerSpecularMap0.T           texture  float4          2d             t2      1
// g_MaterialParameter               cbuffer      NA          NA            cb0      1
// g_WetnessParameter                cbuffer      NA          NA            cb1      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyz
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float
// TEXCOORD                 3   xyzw        4     NONE   float   xy
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float
// COLOR                    0   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
0x00000000: ps_5_0
0x00000008: dcl_globalFlags refactoringAllowed
0x0000000C: dcl_constantbuffer CB0[11], immediateIndexed
0x0000001C: dcl_constantbuffer CB1[2], immediateIndexed
0x0000002C: dcl_sampler s0, mode_default
0x00000038: dcl_sampler s1, mode_default
0x00000044: dcl_sampler s2, mode_default
0x00000050: dcl_resource_texture2d (float,float,float,float) t0
0x00000060: dcl_resource_texture2d (float,float,float,float) t1
0x00000070: dcl_resource_texture2d (float,float,float,float) t2
0x00000080: dcl_input_ps linear v1.xyz
0x0000008C: dcl_input_ps linear v2.xyzw
0x00000098: dcl_input_ps linear v4.xy
0x000000A4: dcl_input_ps linear v5.xyzw
0x000000B0: dcl_input_ps linear v6.xyzw
0x000000BC: dcl_output o0.xyzw
0x000000C8: dcl_output o1.xyzw
0x000000D4: dcl_output o2.xyzw
0x000000E0: dcl_output o3.xyzw
0x000000EC: dcl_temps 9
0x000000F4: dp3 r0.x, v1.xyzx, v1.xyzx
0x00000110: rsq r0.x, r0.x
0x00000124: mul r0.yzw, r0.xxxx, v1.xxyz
0x00000140: dp3 r1.x, v2.xyzx, v2.xyzx
0x0000015C: rsq r1.x, r1.x
0x00000170: mul r1.xyz, r1.xxxx, v2.xyzx
0x0000018C: mov_sat r1.w, v5.w
0x000001A0: mad_sat r0.x, v1.y, r0.x, l(0.500000)
0x000001C4: mul r0.x, r0.x, r1.w
0x000001E0: mul r0.x, r0.x, cb1[0].x
0x00000200: mul r2.xy, v4.xyxx, cb0[2].xyxx
0x00000220: mul r3.xyz, r0.zwyz, r1.zxyz
0x0000023C: mad r3.xyz, r1.yzxy, r0.wyzw, -r3.xyzx
0x00000264: mul r3.xyz, r3.xyzx, v2.wwww
0x00000280: dp3 r2.z, r3.xyzx, r3.xyzx
0x0000029C: rsq r2.z, r2.z
0x000002B0: mul r3.xyz, r2.zzzz, r3.xyzx
0x000002CC: dp3 r2.z, -v5.xyzx, -v5.xyzx
0x000002F0: rsq r2.z, r2.z
0x00000304: mul r4.xyz, r2.zzzz, -v5.xyzx
0x00000324: dp3 r2.z, r4.xyzx, r0.yzwy
0x00000340: ge r2.w, r2.z, l(0.000000)
0x0000035C: resinfo_indexable(texture2d)(float,float,float,float) r4.xy, l(0), t1.xyzw
0x00000380: mul r4.xy, r2.xyxx, r4.xyxx
0x0000039C: deriv_rtx_coarse r4.zw, r4.xxxy
0x000003B0: deriv_rtx_coarse r5.xy, r2.xyxx
0x000003C4: deriv_rty_coarse r4.xy, r4.xyxx
0x000003D8: deriv_rty_coarse r5.zw, r2.xxxy
0x000003EC: if_nz r2.w
0x000003F8:   mul r4.xy, r4.xyxx, r4.xyxx
0x00000414:   mad r4.xy, r4.zwzz, r4.zwzz, r4.xyxx
0x00000438:   max r2.w, r4.y, r4.x
0x00000454:   log r2.w, r2.w
0x00000468:   mul r2.w, r2.w, l(0.500000)
0x00000484:   max r2.w, r2.w, l(0.000000)
0x000004A0:   ge r3.w, l(3.500000), r2.w
0x000004BC:   if_nz r3.w
0x000004C8:     mov_sat r3.w, r2.z
0x000004DC:     add r3.w, -r3.w, l(1.000000)
0x000004FC:     mul r3.w, r3.w, r3.w
0x00000518:     mad r3.w, r3.w, l(42.000000), l(8.000000)
0x0000053C:     add r4.xy, r2.wwww, l(1.000000, -0.500000, 0.000000, 0.000000)
0x00000564:     div r3.w, r3.w, r4.x
0x00000580:     div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
0x000005A8:     dp3 r6.x, r3.xyzx, -v5.xyzx
0x000005C8:     dp3 r6.y, -r1.xyzx, -v5.xyzx
0x000005EC:     dp3 r6.z, r0.yzwy, -v5.xyzx
0x0000060C:     dp2 r4.z, r6.xyxx, r6.xyxx
0x00000628:     rsq r4.z, r4.z
0x0000063C:     mul r4.zw, r4.zzzz, r6.xxxy
0x00000658:     dp3 r6.x, r6.xyzx, r6.xyzx
0x00000674:     mad r6.x, -r6.z, r6.z, r6.x
0x0000069C:     sqrt r6.x, r6.x
0x000006B0:     div r6.x, r6.x, r6.z
0x000006CC:     mul r4.zw, r4.zzzw, r6.xxxx
0x000006E8:     mul r4.zw, r4.zzzw, cb0[7].wwww
0x00000708:     mad r2.xy, r4.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), r2.xyxx
0x00000738:     mov r6.xy, r2.xyxx
0x0000074C:     mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
0x0000076C:     mov r6.z, l(0)
0x00000780:     loop
0x00000784:       ge r6.w, r6.z, r3.w
0x000007A0:       breakc_nz r6.w
0x000007AC:       mad r6.xy, -r4.xxxx, r4.zwzz, r6.xyxx
0x000007D4:       sample_d_indexable(texture2d)(float,float,float,float) r6.w, r6.xyxx, t1.xywz, s1, r5.xyxx, r5.zwzz
0x00000810:       add r8.x, -r4.x, r7.x
0x00000830:       lt r8.y, r8.x, r6.w
0x0000084C:       movc r8.y, r8.y, r3.w, r6.z
0x00000870:       add r6.z, r8.y, l(1.000000)
0x0000088C:       mov r7.zw, r7.xxxy
0x000008A0:       mov r7.x, r8.x
0x000008B4:       mov r7.y, r6.w
0x000008C8:     endloop
0x000008CC:     add r5.xyzw, r7.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
0x000008F4:     add r2.xy, -r5.wyww, r5.zxzz
0x00000914:     add r3.w, -r2.y, r2.x
0x00000934:     eq r4.x, r3.w, l(0.000000)
0x00000950:     mul r2.y, r2.y, r5.z
0x0000096C:     mad r2.x, r5.x, r2.x, -r2.y
0x00000994:     div r2.x, r2.x, r3.w
0x000009B0:     movc r2.x, r4.x, l(-0.500000), r2.x
0x000009D4:     mul r2.y, r4.y, l(0.333333)
0x000009F0:     mul r2.y, r2.y, r2.y
0x00000A0C:     mad r3.w, -r4.y, l(0.666667), l(3.000000)
0x00000A34:     mul r2.y, r2.y, r3.w
0x00000A50:     mad r2.x, r2.y, -r2.x, r2.x
0x00000A78:     mul r2.xy, r2.xxxx, r4.zwzz
0x00000A94:     mad r4.xy, v4.xyxx, cb0[2].xyxx, r2.xyxx
0x00000ABC:     sample_l_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xywz, s1, r2.w
0x00000AF0:     sample_l_aoffimmi_indexable(-1,-1,0)(texture2d)(float,float,float,float) r4.z, r4.xyxx, t1.xyzw, s1, r2.w
0x00000B28:     mad r3.w, r3.w, l(-4.000000), r4.z
0x00000B4C:     sample_l_aoffimmi_indexable(1,1,0)(texture2d)(float,float,float,float) r4.z, r4.xyxx, t1.xyzw, s1, r2.w
0x00000B84:     add r3.w, r3.w, r4.z
0x00000BA0:     sample_l_aoffimmi_indexable(-1,1,0)(texture2d)(float,float,float,float) r4.z, r4.xyxx, t1.xyzw, s1, r2.w
0x00000BD8:     add r3.w, r3.w, r4.z
0x00000BF4:     sample_l_aoffimmi_indexable(1,-1,0)(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.xywz, s1, r2.w
0x00000C2C:     add r2.w, r2.w, r3.w
0x00000C48:     mul r2.w, r2.w, cb0[7].w
0x00000C68:     mul_sat r2.w, r2.w, l(70.000000)
0x00000C84:     mul_sat r2.z, r2.z, l(5.000000)
0x00000CA0:     mul r2.xy, r2.xyxx, r2.zzzz
0x00000CBC:   else
0x00000CC0:     mov r2.xyw, l(0,0,0,0)
0x00000CE0:   endif
0x00000CE4: else
0x00000CE8:   mov r2.xyw, l(0,0,0,0)
0x00000D08: endif
0x00000D0C: mad r2.xy, v4.xyxx, cb0[2].xyxx, r2.xyxx
0x00000D34: sample_indexable(texture2d)(float,float,float,float) r4.xy, r2.xyxx, t1.xyzw, s1
0x00000D60: mul r4.zw, r2.xxxy, cb0[0].xxxy
0x00000D80: sample_indexable(texture2d)(float,float,float,float) r5.xyz, r4.zwzz, t0.xyzw, s0
0x00000DAC: mul r6.xyz, r5.xyzx, r5.xyzx
0x00000DC8: mul r5.xyz, r5.xyzx, cb0[4].xyzx
0x00000DE8: mul r5.xyz, r5.xyzx, r5.xyzx
0x00000E04: add r4.xy, r4.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
0x00000E2C: dp2 r2.z, r4.xyxx, r4.xyxx
0x00000E48: add r2.z, -r2.z, l(0.250000)
0x00000E68: max r2.z, r2.z, l(0.000000)
0x00000E84: sqrt r7.z, r2.z
0x00000E98: mul r7.xy, r4.xyxx, cb0[5].wwww
0x00000EB8: dp3 r2.z, r7.xyzx, r7.xyzx
0x00000ED4: rsq r2.z, r2.z
0x00000EE8: mul r4.xyz, r2.zzzz, r7.xyzx
0x00000F04: mul r1.xyz, r1.xyzx, r4.yyyy
0x00000F20: mad r1.xyz, r4.xxxx, r3.xyzx, r1.xyzx
0x00000F44: mad r0.yzw, r4.zzzz, r0.yyzw, r1.xxyz
0x00000F68: mul r1.xy, r2.xyxx, cb0[1].xyxx
0x00000F88: sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyxx, t2.xyzw, s2
0x00000FB4: mul r1.x, r3.y, l(128.000000)
0x00000FD0: max r3.y, r1.x, l(1.000000)
0x00000FEC: mul r1.xyz, r6.xyzx, v6.xyzx
0x00001008: mul r1.xyz, r1.xyzx, v6.wwww
0x00001024: mul r4.xyz, r3.wwww, r1.xyzx
0x00001040: add r1.x, -r2.w, l(1.000000)
0x00001060: mul r1.xyz, r1.xxxx, r5.xyzx
0x0000107C: mul_sat r2.x, r3.x, cb1[1].x
0x0000109C: mov r3.w, l(1.000000)
0x000010B0: add r2.x, r2.x, -r3.x
0x000010D0: add r2.yz, -r3.yyzy, cb1[1].yyzy
0x000010F4: add r2.w, cb1[0].y, l(-1.000000)
0x00001114: mad r2.xyzw, r0.xxxx, r2.xyzw, r3.xyzw
0x00001138: mul r1.xyz, r1.xyzx, r2.wwww
0x00001154: lt r0.x, cb1[0].w, v5.z
0x00001174: div_sat r2.w, v5.z, cb1[0].w
0x00001194: movc r0.x, r0.x, r2.w, l(1.000000)
0x000011B8: mul r0.x, r0.x, r0.x
0x000011D4: add r2.w, r1.w, l(-1.000000)
0x000011F0: mad o1.x, r0.x, r2.w, l(1.000000)
0x00001214: dp3 r0.x, r4.xyzx, r4.xyzx
0x00001230: lt r0.x, l(0.000000), r0.x
0x0000124C: and r0.x, r0.x, l(0x3f800000)
0x00001268: dp3 r2.w, cb0[6].xyzx, l(0.298910, 0.586610, 0.114480, 0.000000)
0x00001294: add r2.w, r2.w, l(-1.000000)
0x000012B0: mad r2.w, r0.x, r2.w, l(1.000000)
0x000012D4: mad o0.xyz, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
0x00001310: mul r0.y, r2.y, l(-0.066667)
0x0000132C: exp o0.w, r0.y
0x00001340: mul o1.z, r2.w, r2.x
0x0000135C: max r4.w, cb0[10].y, l(0.007812)
0x0000137C: mov r3.xyz, cb0[6].xyzx
0x00001394: mov r3.w, l(0)
0x000013A8: add r4.xyzw, -r3.xyzw, r4.xyzw
0x000013C8: mad r0.xyzw, r0.xxxx, r4.xyzw, r3.xyzw
0x000013EC: sqrt o2.xyz, r1.xyzx
0x00001400: sqrt o3.xyz, r0.xyzx
0x00001414: mov o1.w, cb0[9].w
0x0000142C: mov o1.y, r1.w
0x00001440: mov o2.w, r2.z
0x00001454: mov o3.w, r0.w
0x00001468: ret
// Approximately 170 instruction slots used
